generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organizations {
  id         String            @id @default(uuid())
  name       String
  type       OrganizationsType
  createdAt  DateTime          @default(now()) @map("created_at")
  updatedAt  DateTime          @updatedAt @map("updated_at")
  attendance Attendance[]
  attendees  Attendees[]
  events     Events[]

  @@map("organizations")
}

model Attendees {
  id                 String                 @id @default(uuid())
  firstName          String                 @map("first_name")
  lastName           String                 @map("last_name")
  embedding          Unsupported("vector")?
  age                Int?
  email              String?
  status             String?
  address            String?
  birthday           String?
  facebookName       String?                @map("facebook_name")
  facebookLink       String?                @map("facebook_link")
  cellLeader         String?                @map("cell_leader")
  primaryLeader      String?                @map("primary_leader")
  network            String?
  churchHierarchy    String?                @map("church_hierarchy")
  memberStatus       MemberStatus?          @map("member_status")
  churchProcess      String?                @map("church_process")
  gradeLevel         String?                @map("grade_level")
  section            String?
  organizationId     String                 @map("organization_id")
  organization       Organizations          @relation(fields: [organizationId], references: [id])
  createdAt          DateTime               @default(now()) @map("created_at")
  updatedAt          DateTime               @updatedAt @map("updated_at")

  eventRegistrations EventRegistrations[]
  attendance         Attendance[]

  @@unique([firstName, lastName])
  @@map("attendees")
}

model Events {
  id                 String               @id @default(uuid())
  name               String?
  image              String
  description        String
  tagline            String
  location           String
  startDate          DateTime?            @map("start_date")
  endDate            DateTime?            @map("end_date")
  startTime          DateTime             @map("start_time")
  endTime            DateTime             @map("end_time")
  createdAt          DateTime             @default(now()) @map("created_at")
  updatedAt          DateTime             @updatedAt @map("updated_at")
  organizationId     String               @map("organization_id")
  category           EventCategory
  slug               String               @unique
  events             Attendance[]
  eventRegistrations EventRegistrations[]
  organization       Organizations        @relation(fields: [organizationId], references: [id])

  @@map("events")
}

model Attendance {
  id                  String              @id @default(uuid())
  timeIn              DateTime            @map("time_in")
  timeOut             DateTime?           @map("time_out")
  weekNumber          Int                 @map("week_number")
  createdAt           DateTime            @default(now()) @map("created_at")
  updatedAt           DateTime            @updatedAt @map("updated_at")
  attendeeId          String?              @map("attendee_id")
  eventRegistrationId String?             @map("event_registration_id")
  eventId             String?             @map("event_id")
  organizationId      String              @map("organization_id")
  attendee            Attendees?           @relation(fields: [attendeeId], references: [id])
  event               Events?             @relation(fields: [eventId], references: [id])
  eventRegistration   EventRegistrations? @relation(fields: [eventRegistrationId], references: [id])
  organization        Organizations       @relation(fields: [organizationId], references: [id])

  @@map("attendance")
}

model EventRegistrations {
  id         String       @id @default(uuid())
  invitedBy  String?      @map("invited_by")
  eventId    String       @map("event_id")
  attendeeId String       @map("attendee_id")
  createdAt  DateTime     @default(now()) @map("created_at")
  updatedAt  DateTime     @updatedAt @map("updated_at")
  attendance Attendance[]
  attendee   Attendees    @relation(fields: [attendeeId], references: [id])
  event      Events       @relation(fields: [eventId], references: [id])

  @@unique([attendeeId, eventId])
  @@map("event_registrations")
}

enum OrganizationsType {
  CHURCH
  SCHOOL
  COMPANY
}

enum EventCategory {
  RECURRING
  SPECIAL
}

enum MemberStatus {
  FIRST_TIMER
  SECOND_TIMER
  THIRD_TIMER
  FOURTH_TIMER
  REGULAR_ATTENDEE
  REGULAR_DISCIPLE
  REGULAR_STARTUP
  BACK_TO_LIFE
  CELL_MEMBER
  CHILDREN
}